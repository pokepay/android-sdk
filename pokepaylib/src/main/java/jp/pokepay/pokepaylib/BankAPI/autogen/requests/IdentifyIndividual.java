// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.pokepaylib.BankAPI.autogen.requests;

import java.util.HashMap;
import java.util.Map;

import jp.pokepay.pokepaylib.BankAPI.BankRequest;
import jp.pokepay.pokepaylib.BankAPI.BankRequestError;
import jp.pokepay.pokepaylib.ProcessingError;
import jp.pokepay.pokepaylib.Request;
import jp.pokepay.pokepaylib.BankAPI.autogen.responses.*;

public class IdentifyIndividual extends BankRequest {
    private String signature;
    private String signingCert;
    private String expectedHash;
    private String name;
    private String gender;
    private String address;
    private String dateOfBirth;
    private String accountId;

    public IdentifyIndividual(String accountId, String signature, String signingCert, String expectedHash) {
        this.accountId = accountId;
        this.signature = signature;
        this.signingCert = signingCert;
        this.expectedHash = expectedHash;
    }

    public IdentifyIndividual name(String name) {
        this.name = name;
        return this;
    }

    public IdentifyIndividual gender(String gender) {
        this.gender = gender;
        return this;
    }

    public IdentifyIndividual address(String address) {
        this.address = address;
        return this;
    }

    public IdentifyIndividual dateOfBirth(String dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
        return this;
    }

    @Override
    protected final Request.Method method() {
        return Request.Method.POST;
    }

    @Override
    public String path() {
        return "/accounts" + "/" + this.accountId + "/individual-numbers" + "/identification";
    }

    @Override
    protected final Map<String, Object> parameters() {
        return new HashMap<String, Object>() {{
            if (signature != null) {
                put("signature", signature);
            }
            if (signingCert != null) {
                put("signing_cert", signingCert);
            }
            if (expectedHash != null) {
                put("expected_hash", expectedHash);
            }
            if (name != null) {
                put("name", name);
            }
            if (gender != null) {
                put("gender", gender);
            }
            if (address != null) {
                put("address", address);
            }
            if (dateOfBirth != null) {
                put("date_of_birth", dateOfBirth);
            }
        }};
    }

    public final IdentificationResult send(String accessToken) throws ProcessingError, BankRequestError {
        return super.send(IdentificationResult.class, accessToken);
    }
}
