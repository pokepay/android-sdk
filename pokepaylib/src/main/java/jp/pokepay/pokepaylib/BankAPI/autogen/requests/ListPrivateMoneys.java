// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.pokepaylib.BankAPI.autogen.requests;

import java.util.HashMap;
import java.util.Map;

import jp.pokepay.pokepaylib.BankAPI.BankRequest;
import jp.pokepay.pokepaylib.BankAPI.BankRequestError;
import jp.pokepay.pokepaylib.ProcessingError;
import jp.pokepay.pokepaylib.Request;
import jp.pokepay.pokepaylib.BankAPI.autogen.responses.*;

public class ListPrivateMoneys extends BankRequest {
    private String name;
    private Boolean includeExclusive;
    private Uuid before;
    private Uuid after;
    private Integer perPage;

    public ListPrivateMoneys(Uuid before, Uuid after) {
        this.before = before;
        this.after = after;
    }

    public ListPrivateMoneys name(String name) {
        this.name = name;
        return this;
    }

    public ListPrivateMoneys includeExclusive(Boolean includeExclusive) {
        this.includeExclusive = includeExclusive;
        return this;
    }

    public ListPrivateMoneys perPage(Integer perPage) {
        this.perPage = perPage;
        return this;
    }

    @Override
    protected final Request.Method method() {
        return Request.Method.GET;
    }

    @Override
    public String path() {
        return "/private-moneys";
    }

    @Override
    protected final Map<String, Object> parameters() {
        return new HashMap<String, Object>() {{
            if (name != null) {
                put("name", name);
            }
            if (includeExclusive != null) {
                put("include_exclusive", includeExclusive);
            }
            if (before != null) {
                put("before", before);
            }
            if (after != null) {
                put("after", after);
            }
            if (perPage != null) {
                put("per_page", perPage);
            }
        }};
    }

    public final PaginatedPrivateMoneys send(String accessToken) throws ProcessingError, BankRequestError {
        return super.send(PaginatedPrivateMoneys.class, accessToken);
    }
}
