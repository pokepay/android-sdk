// DO NOT EDIT: File is generated by code generator.
package jp.pokepay.pokepaylib.BankAPI.autogen.requests;

import java.util.HashMap;
import java.util.Map;

import jp.pokepay.pokepaylib.BankAPI.BankRequest;
import jp.pokepay.pokepaylib.BankAPI.BankRequestError;
import jp.pokepay.pokepaylib.ProcessingError;
import jp.pokepay.pokepaylib.Request;
import jp.pokepay.pokepaylib.BankAPI.autogen.responses.*;

public class BankTopUp extends BankRequest {
    private String accountId;
    private String bankId;
    private Integer amount;
    private String requestId;
    private String userId;

    public BankTopUp(String userId, String accountId, String bankId, int amount) {
        this.userId = userId;
        this.accountId = accountId;
        this.bankId = bankId;
        this.amount = amount;
    }

    public BankTopUp requestId(String requestId) {
        this.requestId = requestId;
        return this;
    }

    @Override
    protected final Request.Method method() {
        return Request.Method.POST;
    }

    @Override
    public String path() {
        return "/users" + "/" + this.userId + "/banks" + "/topup";
    }

    @Override
    protected final Map<String, Object> parameters() {
        return new HashMap<String, Object>() {{
            if (accountId != null) {
                put("account_id", accountId);
            }
            if (bankId != null) {
                put("bank_id", bankId);
            }
            if (amount != null) {
                put("amount", amount);
            }
            if (requestId != null) {
                put("request_id", requestId);
            }
        }};
    }

    public final UserTransaction send(String accessToken) throws ProcessingError, BankRequestError {
        return super.send(UserTransaction.class, accessToken);
    }
}
